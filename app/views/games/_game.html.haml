#game
  
  - if false
    = render "gameover", :game => @game
  
  - else
    = render "board", :game => @game

  #score-box
    .menu
      %ul
        %li
          = link_to "Settings", "#", :class => "settings"
        %li.player
          = current_player

    .inner
      
      %table.scores

        %tr
          %td.value.turns= @game.challenger_turns_remaining
          %td.label
            = image_tag "menu/turn.png"

        %tr
          %td.value.attack= @game.challenger_attack_score
          %td.label
            = image_tag "menu/attack.png"

        %tr
          %td.value.defense= @game.challenger_defense_score
          %td.label
            = image_tag "menu/defense.png"


  #loot-list.scrollable.vertical
    
    - for loot in @game.loot
      = render "items/loot", :loot => loot

  = render "active_forge"
  = render "settings"

:javascript
  config["initialState"] = #{@game.to_sync.to_json}

- for ore in Ore.all
  :javascript
    config["#{ore.to_class}_tile"] = "#{Ore.tile_cache(ore.id)}"

#loot-template
  = render "items/loot", :loot => Loot.new(:attack => 1, :defense => 1)