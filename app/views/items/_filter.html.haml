#armory-filter.form_stacked

  .row
    .span2.first

      %fieldset
        %legend Class
        .input
        
          %ul.inputs-list
            - Classification.all.each do |c|
              
              %li
                %label{ :for => dom_id(c) }
                  %input{ :id => dom_id(c), :rel => :filter, :type => :radio, :name => "classification", :value => c.id, :checked => (params[:classification].to_s == c.id.to_s) }
                  %span
                    = image_tag(c.default_icon.url(:tiny), :class => "icon")
                    = c

    .span2.second

      %fieldset
        
        %legend Map Region
        .input

          %ul.inputs-list
            - Zone.all.each do |zone|
              
              %li
                %label{ :for => "zone-#{zone.id}" }
                  %input{ :id => "zone-#{zone.id}", :rel => :filter, :type => :radio, :name => "zone_id", :value => zone.id, :checked => (params[:zone_id].to_i == zone.id.to_i), :disabled => !current_player.can_travel_to?(zone) }
                  %span= zone.name

  .row

    .span2.first

      %fieldset
        %legend Ore

        .input
        
          %ul.inputs-list
            - Ore.all.each do |o|
              - next if o.rank == 6
              %li
                %label{ :for => dom_id(o) }
                  %input{ :id => dom_id(o), :rel => :filter, :type => :checkbox, :name => "ores[]", :value => o.id, :checked => (params[:ores].include?(o.id)) }
                  %span
                    = image_tag(o.tile.url(:small), :class => "icon")
                    = o

    .span2.second

      %fieldset
        %legend Rarity

        .input
        
          %ul.inputs-list
            - Rarity.all.each do |r|
              
              - unless r.set?
                %li
                  %label{ :for => dom_id(r) }
                    %input{ :id => dom_id(r), :rel => :filter, :type => :checkbox, :name => "rarities[]", :value => r.id, :checked => (params[:rarities].include?(r.id))  }
                    %span{ :class => r.to_css_class }= r.name

  .clearfix