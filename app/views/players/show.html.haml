#player-page.container

  .row

    .span-one-third

      .section.player
        %span.level 
          LVL
          %span.value= @player.level

        %h1.name= @player

        %table.stats
          %tr
            %td.stat Score
            %td.value= @player.score
          
          %tr.forge
            %td.stat Forges Complete
            %td.value= @player.forges_complete

          %tr
            %td.stat Total Items
            %td.value= @player.total_items

          %tr.advanced
            %td.stat Advanced
            %td.value= @player.advanced_items

          %tr.rare
            %td.stat Rares
            %td.value= @player.rare_items

          %tr.epic
            %td.stat Epics
            %td.value= @player.rare_items

    .span-two-thirds

      .section.personalization

        %table
          
          %tr.skills
            %td.skill.accuracy
              %span.value= @player.skills.accuracy
              %span.name Accuracy
            %td.skill.craftsmanship
              %span.value= @player.skills.craftsmanship
              %span.name Craftsmanship
            %td.skill.perception
              %span.value= @player.skills.perception
              %span.name Perception

            %td{ :rowspan => 2 }
              .slot.final

          %tr.accessories
            %td.accessory
              .slot.gloves{ :class => ("empty" unless @player.skills.gloves?) }
            %td.accessory
              .slot.apron{ :class => ("empty" unless @player.skills.apron?) }
            %td.accessory
              .slot.goggles{ :class => ("empty" unless @player.skills.goggles?) }

          

  .row

    .span-one-third

      .section.forges-wrap

        %h2.heading 
          Forges

        .sep

        - if @player.forges.active.any?
          .active-forges
            - @player.forges.active.each_with_index do |forge, index|
              = render "forges/stub", :forge => forge, :last => ((index+1)%3==0), :current => (@player.forge == forge)
          
          .clear

        - @player.forges.completed.each_with_index do |forge, index|
          = render "forges/stub", :forge => forge, :last => ((index+1)%3==0), :current => false
        
          .clear
    
    .span-one-third

      .section.hero-wrap

        %h2.heading Guards

        .sep

        = render "heroes/heroes", :player => @player, :loot => nil

        - if @player == current_player
          = link_to "Fight the Training Dummy &rarr;".html_safe, enemy_path(Enemy.training), :class => "btn primary"

    .span-one-third
      
      .section

        - if @player.loot.any?

          %h2.heading Showcase

          .sep

          .exceptional-loot

            - @player.best_set.each do |loot|
              = render "items/loot", :loot => loot

  .clear
