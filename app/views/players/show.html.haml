#player-page.container

  .row

    .span-one-third

      .section.player
        %span.level 
          LVL
          %span.value= @player.level

        %h1.name= @player

        %table.stats
          %tr.score
            %td.stat Score
            %td.value= @player.score
          
          %tr.forge
            %td.stat Forges Complete
            %td.value= @player.forges_complete

          %tr
            %td.stat Total Items
            %td.value= @player.total_items

          %tr.advanced
            %td.stat Advanced
            %td.value= @player.advanced_items

          %tr.rare
            %td.stat Rares
            %td.value= @player.rare_items

          %tr.epic
            %td.stat Epics
            %td.value= @player.rare_items

    #skills.span-two-thirds
      
      - if @player == current_player and current_player.skills.available_points > 0
        = render "skill_up", :player => @player

      - else
        = render "personalization", :player => @player

          

  #dashboard.row

    .span-one-third

      .section.hero-wrap

        = render "heroes/heroes", :player => @player, :loot => nil

    .span-one-third

      .section.forges-wrap

        - if @player.forges.active.any?
          .active-forges
            - @player.forges.active.each_with_index do |forge, index|
              = render "forges/stub", :forge => forge, :last => ((index+1)%3==0), :current => (@player.forge == forge)
          
          .clear

        - @player.forges.completed.each_with_index do |forge, index|
          = render "forges/stub", :forge => forge, :last => ((index+1)%3==0), :current => false
        
          .clear

    .span-one-third
      
      .section

        - if @player.loot.any?

          .exceptional-loot

            - @player.best_set.each do |loot|
              = render "items/loot", :loot => loot

  .clear
