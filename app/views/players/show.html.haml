#player-page.container

  .badge
  
    .heading

      .score
        %span.stat Score
        %span.value= @player.score.score

      %h1.player= @player
      .sep

    %table.completion

      %tbody

        %tr

          %td.forge
            %span.count= @player.forges_complete
            Forges Complete
            (#{@player.forges_complete_percent}%)

          %td.battle
            %span.count= @player.battles_won_count
            Battles Won
            (#{@player.battles_won_percent}%)

          %td.total
            %span.count= @player.total_items
            Total Items
            (#{@player.total_items_percent}%)
          
          %td.rare
            %span.count= @player.rare_items
            Rares
            (#{@player.rare_items_percent}%)

          %td.epic
            %span.count= @player.epic_items
            Epics
            (#{@player.epic_items_percent}%)

  .row

    .span-one-third

      .section.forges-wrap

        %h1.heading 
          Forges

        .sep

        - if @player.forges.active.any?
          .active-forges
            - @player.forges.active.each_with_index do |forge, index|
              = render "forges/stub", :forge => forge, :last => ((index+1)%3==0), :current => (@player.forge == forge)
          
          .clear

        - @player.forges.completed.each_with_index do |forge, index|
          = render "forges/stub", :forge => forge, :last => ((index+1)%3==0), :current => false
        
          .clear
    
    .span-one-third

      .section.hero-wrap

        %h1.heading Guards

        .sep

        = render "heroes/heroes", :player => @player, :loot => nil

        - if @player == current_player
          = link_to "Fight the Training Dummy &rarr;".html_safe, enemy_path(Enemy.training), :class => "btn primary"

    .span-one-third
      
      .section

        - if @player.loot.any?

          %h1.heading Showcase

          .sep

          .exceptional-loot

            - @player.best_set.each do |loot|
              = render "items/loot", :loot => loot

  .clear