#player-page.container

  .heading

    %h1.player= player_slug(@player)

  %table.completion

    %tbody

      %tr

        %td.mines
          %span.count= @player.forge_count
          Forge Complete
          (#{@player.forge_percent}%)

        %td.mines
          %span.count= @player.battle_win_count
          Battles Won
          (#{@player.battle_win_percent}%)

        %td.total
          %span.count= @player.item_count
          Total Items
          (#{@player.item_percent}%)
        
        %td.rare
          %span.count= @player.rare_count
          Rares
          (#{@player.rare_percent}%)

        %td.epic
          %span.count= @player.epic_count
          Epics
          (#{@player.epic_percent}%)

  .row

    .span-one-third

      .section.forges-wrap

        %h1.heading 
          Forges

        - if @player.forges.active.any?
          .active-forges
            - @player.forges.active.each_with_index do |forge, index|
              = render "forges/stub", :forge => forge, :last => ((index+1)%3==0), :current => (@player.forge == forge)
          
          .clear
      
        - elsif @player == current_player
          %p 
            = link_to "Visit the Map to Start Forging", map_index_path, :class => 'btn primary'

        - @player.forges.completed.each_with_index do |forge, index|
          = render "forges/stub", :forge => forge, :last => ((index+1)%3==0), :current => false
        
          .clear
    
    .span-one-third

      .section.hero-wrap
        %h1.heading Elite Guard

        = render "heroes/heroes", :player => @player, :loot => nil

    .span-one-third
      
      .section

        %h1.heading Best Loot

        - @player.loot.order("rating desc").limit(10).each do |loot|
          = render "items/loot", :loot => loot

  .clear