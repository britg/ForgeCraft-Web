#battle

  .log

    .new_message

      = form_for [@battle, Action.new], :remote => true, :format => :json do |f|
        
        = fields_for :battle_action do |action|
          
          = action.hidden_field :type, :value => :message
          = action.hidden_field :player_id, :value => current_player.id
          = action.hidden_field :player_name, :value => current_player.to_param
          = action.text_field :message

    %ul.action-list
      
      - @battle.actions.reverse.each do |action|
        %li.log-action= render "actions/log_#{action.type}", :action => action

  .battlers

    .battler-wrap.you
      .battler
        .player-bar
          %h2.player= @battle.first_player.name

        .hero-wrap
          = render "hero_snapshots", :warrior => @battle.first_warrior, :thief => @battle.first_thief, :ranger => @battle.first_ranger
    
    .battler-wrap.opponent
      .battler
        .player-bar
          %h2.player= @battle.second_player.name

        .hero-wrap
          = render "hero_snapshots", :warrior => @battle.second_warrior, :thief => @battle.second_thief, :ranger => @battle.second_ranger

#log-templates
  - Action::TYPES.each do |action_type|
    
    = render "actions/log_#{action_type}", :action => Action.new(:type => action_type)

:javascript

  ForgeCraft.Config.battle = #{@battle.to_json}